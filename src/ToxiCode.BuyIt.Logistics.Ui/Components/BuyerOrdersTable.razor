@using ToxiCode.BuyIt.Logistics.Ui.Models
@using ToxiCode.BuyIt.Logistics.Ui.Services.Abstractions
@inject IOrderService _orderService;
@namespace ToxiCode.BuyIt.Logistics.Ui.Components

<h3>@BuyerId Orders Table</h3>

<div>
    <form>
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Status</th>
                <th scope="col">Buyer id</th>
                <th scope="col">Creation date</th>
                <th scope="col">From</th>
                <th scope="col">To</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var order in _orders)
            {
                <tr>
                    <th scope="row">
                        <a href="/OrderById/@order.Id">@order.Id</a>
                    </th>
                    <td>@order.Status</td>
                    <td>@order.CreationDate</td>
                    <td>@order.From</td>
                    <td>@order.To</td>
                </tr>
            }
            </tbody>
        </table>
    </form>
</div>

@code {

    [Parameter]
    public string BuyerId { get; set; } = null!;

    private IEnumerable<OrderDto> _orders = new List<OrderDto>();

    protected override async Task OnInitializedAsync()
    {
        var result = await _orderService.GetOrderByBuyerId(BuyerId);
        if (result != null)
            _orders = result;
    }

}